[versions]
kotlinLogging = "7.0.13"
gxfUtils = "2.5.0"
apacheHttpClient = "5.5"
dependency-management = "1.1.7"
gradleWrapperUpgrade = "0.12"
kotlin = "2.2.10"
sonarqube = "6.2.0.5505"
spotless = "7.2.1"
spring-boot = "3.5.5"
wiremock = "3.13.1"

[libraries]
logging = { group = "io.github.oshai", name = "kotlin-logging-jvm", version.ref = "kotlinLogging" }
kafkaAzureOAuth = { group = "com.gxf.utilities", name = "kafka-azure-oauth", version.ref = "gxfUtils" }
apacheHttpClient = { group = "org.apache.httpcomponents.client5", name = "httpclient5", version.ref = "apacheHttpClient" }
mockServer = { group = "org.wiremock", name = "wiremock-standalone", version.ref = "wiremock" }
assertJ = { group = "org.assertj", name = "assertj-core" }
junitJupiterApi = { group = "org.junit.jupiter", name = "junit-jupiter-api" }
junitJupiterEngine = { group = "org.junit.jupiter", name = "junit-jupiter-engine" }
junitJupiterParams = { group = "org.junit.jupiter", name = "junit-jupiter-params" }
junitPlatformLauncher = { group = "org.junit.platform", name = "junit-platform-launcher" }
micrometerPrometheusModule = { group = "io.micrometer", name = "micrometer-registry-prometheus" }
mockitoJunitJupiter = { group = "org.mockito", name = "mockito-junit-jupiter" }
springBootDependencies = { group = "org.springframework.boot", name = "spring-boot-dependencies", version.ref = "spring-boot" }
springBootStarterActuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator" }
springBootStarterLogging = { group = "org.springframework.boot", name = "spring-boot-starter-logging" }
springBootStarterTest = { group = "org.springframework.boot", name = "spring-boot-starter-test" }
springBootStarterWeb = { group = "org.springframework.boot", name = "spring-boot-starter-web" }
springBootStarterWebflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux" }
springBootStarterSecurity = { group = "org.springframework.boot", name = "spring-boot-starter-security" }
springKafka = { group = "org.springframework.kafka", name = "spring-kafka" }
springKafkaTest = { group = "org.springframework.kafka", name = "spring-kafka-test" }

[plugins]
dependencyManagement = { id = "io.spring.dependency-management", version.ref = "dependency-management" }
eclipse = { id = "eclipse" }
gradleWrapperUpgrade = { id = "org.gradle.wrapper-upgrade", version.ref = "gradleWrapperUpgrade" }
jacoco = { id = "jacoco" }
jacocoReportAggregation = { id = "jacoco-report-aggregation" }
jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
springBoot = { id = "org.springframework.boot", version.ref = "spring-boot" }
